{"version":3,"sources":["ARG-logo-text.png","ARG-logo.png","fonts/Autumn-in-November.ttf","fonts/Bold-&-Stylish-Calligraphy.ttf","fonts/Flower-Shop-TTF.ttf","fonts/JandaSwirlyTwirly.ttf","fonts/Lumberjack-Regular.ttf","fonts/October-Twilight.ttf","fonts/OhMyItsJuly-TTF.ttf","fonts/Unicorn-Calligraphy-TTF.ttf","pages/Home.js","pages/About.js","pages/Basket.js","pages/ProductShow.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","base","require","apiKey","Home","props","state","allItems","selectedFilter","items","that","this","select","maxRecords","view","eachPage","records","fetchNextPage","forEach","record","push","fields","err","console","error","filterItems","setState","filteredBy","filteredItems","filter","item","Category","includes","toLowerCase","products","history","Row","UncontrolledDropdown","DropdownToggle","nav","caret","DropdownMenu","right","DropdownItem","onClick","style","marginTop","map","i","Col","sm","md","lg","key","Card","color","showProduct","borderColor","CardImg","className","top","width","src","url","alt","Product","CardBody","CardTitle","CardText","Description","Price","toFixed","React","Component","About","Basket","basket","localStorage","getItem","totalPrice","JSON","parse","length","total","reduce","prev","next","log","indexOf","splice","toJSON","stringify","setItem","editedPrice","fontSize","product","itemColour","itemText","chosenFont","textColour","quantity","Button","removeItem","ProductShow","isFontsOpen","isColoursOpen","message","location","e","value","target","font","colour","indPrice","arr","objectToBasket","getBasket","parsedArr","goBack","Container","fluid","xs","FormGroup","Label","for","Input","type","name","id","onChange","handleChange","Dropdown","isOpen","toggle","toggleFonts","background","tag","selectedFont","toggleColours","paddingLeft","selectedColour","inline","check","addToCart","min","max","placeholder","Header","useState","setIsOpen","Jumbotron","display","justifyContent","alignItems","flexWrap","logoText","height","Navbar","dark","expand","NavbarToggler","Collapse","navbar","Nav","NavItem","to","process","Footer","logo","App","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9b2a6c4f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ARG-logo-text.14025176.png\";","module.exports = __webpack_public_path__ + \"static/media/ARG-logo.a568614e.png\";","module.exports = __webpack_public_path__ + \"static/media/Autumn-in-November.f8f3e38e.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Bold-&-Stylish-Calligraphy.da19b977.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Flower-Shop-TTF.62d26ef0.ttf\";","module.exports = __webpack_public_path__ + \"static/media/JandaSwirlyTwirly.34dcc74a.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Lumberjack-Regular.35dadb5d.ttf\";","module.exports = __webpack_public_path__ + \"static/media/October-Twilight.c91421c7.ttf\";","module.exports = __webpack_public_path__ + \"static/media/OhMyItsJuly-TTF.adf215fc.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Unicorn-Calligraphy-TTF.aef63819.ttf\";","import React from 'react';\nimport { \n  Card, \n  CardBody, \n  CardTitle, \n  CardText, \n  CardImg, \n  Col, \n  Row,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\nimport './Home.css';\nvar Airtable = require('airtable');\nvar base = new Airtable({apiKey: 'keyI3mce75kzQtsZF'}).base('appGrEpAVZejjCvEj');\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allItems: '',\n      selectedFilter: 'Most Popular'\n    };\n  }\n\n  componentWillMount() {\n    const items = [];\n    const that  = this;\n    base('ARG Data').select({\n      maxRecords: 500,\n      view: \"Grid view\"\n    }).eachPage(function page(records, fetchNextPage) {\n        records.forEach(function(record) {\n          items.push(record.fields)\n        });\n        fetchNextPage();\n    \n    }, function done(err) {\n        if (err) { \n          console.error(err); return; \n        } else {\n          that.filterItems(items, 'Most Popular ');\n          that.setState({\n            allItems: items\n          })\n        }\n    });\n  }\n\n  filterItems(items, filteredBy) {\n    const filteredItems = items.filter(item => item.Category.includes(filteredBy.toLowerCase()));\n    this.setState({\n      products: filteredItems,\n      selectedFilter: filteredBy\n    })\n  }\n\n  showProduct(item) {\n    this.props.history.push('/alexandra-rose-gifts/product', {\n      item\n    })\n  }\n\n  render() {\n    const { products, allItems, selectedFilter } = this.state;\n    return (\n        <section>\n          <h1>{selectedFilter}</h1>\n          <Row>\n            <UncontrolledDropdown>\n              <DropdownToggle nav caret>\n                Filter\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem onClick={() => this.filterItems(allItems, 'Bottles')}>\n                  Bottles\n                </DropdownItem>\n                <DropdownItem onClick={() => this.filterItems(allItems, 'Cleaning')}>\n                  Cleaning\n                </DropdownItem>\n                <DropdownItem onClick={() => this.filterItems(allItems, 'Gifts')}>\n                  Gifts\n                </DropdownItem>\n                <DropdownItem onClick={() => this.filterItems(allItems, 'Health and Beauty ')}>\n                  Health and Beauty\n                </DropdownItem>\n                <DropdownItem onClick={() => this.filterItems(allItems, 'Most Popular ')}>\n                  Most Popular\n                </DropdownItem>\n                <DropdownItem onClick={() => this.filterItems(allItems, 'Special Occasion')}>\n                  Special Occasion\n                </DropdownItem>\n                <DropdownItem onClick={() => this.filterItems(allItems, 'Storage')}>\n                  Storage\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Row>\n          <Row style={{marginTop: '1rem'}}>\n          {products && products.map(\n            (item, i) =>\n            <Col sm=\"6\" md=\"4\" lg=\"3\" key={i}>\n              <Card color=\"secondary\" onClick={() => this.showProduct(item)} style={{ borderColor: '#421791' }}>\n                <CardImg className=\"home-images\" top width=\"100%\" src={item[\"Display image\"][0].url} alt={item.Product} />\n                <CardBody>\n                  <CardTitle><h3>{item.Product}</h3></CardTitle>\n                  <CardText className=\"description-text\">{item.Description}</CardText>\n                  <CardText>\n                    <small>£{item.Price.toFixed(2)}</small>\n                  </CardText>\n                </CardBody>\n              </Card>\n            </Col>\n          )}\n          </Row>\n        </section>\n    );\n  }\n}\nexport default Home;","import React from 'react';\n\nclass About extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <main className=\"home-main columns is-multiline\">\n        <div className=\"column is-12\">\n          <h1 className=\"title home-title has-text-centered\">About</h1>\n        </div>\n      </main>\n    );\n  }\n}\nexport default About;","import React from 'react';\nimport { Card, CardBody, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\n\nclass Basket extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  componentDidMount() {\n    let basket = localStorage.getItem(\"basketItems\");\n    basket = JSON.parse(basket)\n    const totalPrice = basket.length > 0 && basket.map(item => item.total).reduce((prev, next) => prev + next);\n    console.log(totalPrice)\n    this.setState({\n      basket,\n      totalPrice\n    })\n  }\n\n  removeItem(item) {\n    let { basket, totalPrice } = this.state;\n    console.log(basket.indexOf(item));\n    basket.splice(basket.indexOf(item), 1);\n    const toJSON = JSON.stringify(basket);\n    localStorage.setItem(\"basketItems\", toJSON);\n    const editedPrice = basket.length > 0 && basket.map(item => item.total).reduce((prev, next) => prev + next);\n    this.setState({\n      basket,\n      totalPrice: editedPrice\n    })\n  }\n\n  render() {\n    const { basket, totalPrice } = this.state;\n    return (\n      <main>\n        <div>\n          <h1>Basket</h1>\n        </div>\n        {basket && basket.length > 0 ?\n        <div>\n          <Row>\n          {basket.map(\n            item =>\n            <Col md=\"3\" sm=\"6\">\n            <Card>\n              <CardBody>\n                <CardTitle style={{fontSize: 22}}>{item.product}</CardTitle>\n                <CardText>Colour: {item.itemColour}</CardText>\n                <CardText>Vinyl Text: {item.itemText}</CardText>\n                <CardText>Font: {item.chosenFont}</CardText>\n                <CardText>Text Colour: {item.textColour}</CardText>\n                <CardText>Quantity: {item.quantity}</CardText>\n                <CardText>Total: £{item.total}</CardText>\n                <Button onClick={() => this.removeItem(item)}>Remove from basket</Button>\n              </CardBody>\n            </Card>\n          </Col>\n          )}\n          </Row>\n          <div>£{totalPrice}</div>\n          <Button>Buy</Button>\n        </div>\n      :\n      <h3>Empty</h3>}\n      </main>\n    );\n  }\n}\nexport default Basket;","import React from 'react';\nimport { Container, Row, Col, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, FormGroup, Label, Input, Button, Collapse } from 'reactstrap';\nimport './ProductShow.css';\n\nclass ProductShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemText: '',\n      chosenFont: '',\n      itemColour: '',\n      textColour: '',\n      isFontsOpen: false,\n      isColoursOpen: false,\n      quantity: 1,\n      message: ''\n    };\n  }\n\n  componentDidMount() {\n    const { item } = this.props.location.state;\n    if (item['Item colour'].length === 1) {\n      this.setState({\n        itemColour: item['Item colour'][0]\n      })\n    }\n  }\n\n  handleChange(e) {\n    const { target: {value} } = e;\n    this.setState({\n      itemText: value\n    });\n  }\n\n  itemColour(e) {\n    const { target: {value} } = e;\n    this.setState({\n      itemColour: value\n    });\n  }\n\n  selectedFont(font) {\n    this.setState({\n      chosenFont: font\n    })\n  }\n\n  selectedColour(colour) {\n    this.setState({\n      textColour: colour\n    })\n  }\n\n  toggleFonts() {\n    this.setState({\n      isFontsOpen: !this.state.isFontsOpen\n    })\n  }\n\n  toggleColours() {\n    this.setState({\n      isColoursOpen: !this.state.isColoursOpen\n    })\n  }\n\n  quantity(e) {\n    const { target: {value} } = e;\n    console.log(value)\n    this.setState({\n      quantity: value\n    });\n  }\n\n  addToCart(product, itemColour, itemText, chosenFont, textColour, indPrice, quantity, total) {\n    const arr = [];\n    if (itemColour.length < 1) {\n      arr.push('item colour');\n    }\n    if (itemText.length < 1) {\n      arr.push('item text');\n    }\n    if (chosenFont.length < 1) {\n      arr.push('font');\n    }\n    if (textColour.length < 1) {\n      arr.push('text colour');\n    }\n    if (arr.length > 0) {\n      this.setState({\n        message: `You need to choose ${arr}`\n      })\n    } else {\n      const objectToBasket = {\n        product: product,\n        itemColour: itemColour,\n        itemText: itemText,\n        chosenFont: chosenFont,\n        textColour: textColour,\n        indPrice: indPrice,\n        quantity: quantity,\n        total: total\n      };\n      const getBasket = localStorage.getItem(\"basketItems\");\n      const parsedArr = JSON.parse(getBasket);\n      if (!parsedArr) {\n        const toJSON = JSON.stringify([objectToBasket]);\n        localStorage.setItem(\"basketItems\", toJSON);\n      } else {\n        parsedArr.push(objectToBasket);\n        const toJSON = JSON.stringify(parsedArr);\n        localStorage.setItem(\"basketItems\", toJSON);\n        this.props.history.goBack();\n      }\n    }\n  }\n\n  render() {\n    const { item } = this.props.location.state;\n    const { \n      itemText, \n      chosenFont, \n      itemColour, \n      textColour, \n      isFontsOpen, \n      isColoursOpen, \n      quantity, \n      message\n    } = this.state;\n    return (\n      <main className=\"page-show\">\n        <div>\n          <h1>{item.Product}</h1>\n        </div>\n        <div>\n          <div className=\"info-box\">{item.Description}</div>\n        </div>\n        <div>\n          <Container className=\"themed-container\" fluid=\"sm\">\n            <Row xs=\"1\" sm=\"1\" md=\"2\">\n              <Col className=\"columns\">\n\n                <div className=\"left-box\" style={{width: '100%'}}>\n\n                <FormGroup>\n                  <Label for=\"text\">Vinyl inscription</Label>\n                  <Input className=\"text-input\" type=\"text\" name=\"text\" id=\"text\" onChange={(e) => this.handleChange(e)} />\n                </FormGroup>\n\n                <div className=\"lists\">\n                  <Dropdown isOpen={isFontsOpen} toggle={() => this.toggleFonts()}>\n                    <DropdownToggle style={{background: '#e7bca4'}} caret>\n                      Fonts\n                    </DropdownToggle>\n                    <DropdownMenu>\n                      <DropdownItem tag=\"button\" className=\"autumn\" onClick={() => this.selectedFont('autumn')}>Autumn in November</DropdownItem>\n                      <DropdownItem tag=\"button\" className=\"bold\" onClick={() => this.selectedFont('bold')}>Bold and Stylish Calligraphy</DropdownItem>\n                      <DropdownItem tag=\"button\" className=\"flower-shop\" onClick={() => this.selectedFont('flower-shop')}>Flower Shop</DropdownItem>\n                      <DropdownItem tag=\"button\" className=\"janda\" onClick={() => this.selectedFont('janda')}>JandaSwirlyTwirly</DropdownItem>\n                      <DropdownItem tag=\"button\" className=\"lumberjack\" onClick={() => this.selectedFont('lumberjack')}>Lumberjack</DropdownItem>\n                      <DropdownItem tag=\"button\" className=\"october\" onClick={() => this.selectedFont('october')}>October Twilight</DropdownItem>\n                      <DropdownItem tag=\"button\" className=\"july\" onClick={() => this.selectedFont('july')}>OhMyItsJuly</DropdownItem>\n                      <DropdownItem tag=\"button\" className=\"unicorn\" onClick={() => this.selectedFont('unicorn')}>Unicorn Calligraphy</DropdownItem>\n                    </DropdownMenu>\n                    </Dropdown>\n\n                    <Dropdown isOpen={isColoursOpen} toggle={() => this.toggleColours()}>\n                      <DropdownToggle caret style={{background: '#e7bca4'}}>\n                        Text Colours\n                      </DropdownToggle>\n                      <DropdownMenu style={{paddingLeft: 10}}>\n                        {item && item['Vinyl colour'].map(\n                          (colour, i) => \n                        <DropdownItem key={i} tag=\"button\" onClick={() => this.selectedColour(colour)}>{colour}</DropdownItem>\n                        )}\n                      </DropdownMenu>\n                    </Dropdown>\n\n                  </div>\n                  <div className=\"text-box\">\n                    <div className={chosenFont} style={{color: textColour}}>{itemText}</div>\n                  </div>\n                </div>\n              </Col>\n              <Col className=\"columns\">\n                <img className=\"show-img\" src={item[\"Display image\"][0].url} />\n              </Col>\n            </Row>\n            {item['Item colour'].length > 1 &&\n            <Row>\n              <Col className=\"color-row\">\n                <FormGroup>\n                  <legend>Available colours</legend>\n                  {item['Item colour'].map(\n                    (colour, i) => \n                    <FormGroup key={i} inline check>\n                    <Label check>\n                      <Input type=\"radio\" name=\"radio1\" value={colour} onChange={(e) => this.itemColour(e)}/>{' '}\n                      {colour}\n                    </Label>\n                  </FormGroup>\n                  )}\n                </FormGroup>\n              </Col>\n            </Row>\n            }\n            <Row className=\"lower-row\" xs=\"1\" sm=\"2\" md=\"2\">\n              <Col className=\"lower cart\">\n                <Button \n                className=\"add-to-cart-button\" \n                onClick={() => this.addToCart(item.Product, itemColour, itemText, chosenFont, textColour, item.Price, quantity, item.Price * quantity)}>\n                  Add to cart\n                </Button>\n                <div style={{color: 'red'}}>{message}</div>\n              </Col>\n              <Col className=\"lower\">\n                <h4>{item.Product}</h4>\n                <h4>Colour: {itemColour}</h4>\n                <h4>Text: {itemText}</h4>\n                <h4>Font: {chosenFont}</h4>\n                <h4>Text colour: {textColour}</h4>\n                <h4>Item price: £{item.Price.toFixed(2)}</h4>\n                <h4>Quantity: <input type=\"number\" id=\"quantity\" name=\"quantity\" min=\"1\" max=\"100\" onChange={(e) => this.quantity(e)} placeholder=\"1\"></input></h4>\n                <h4>Total: £{(item.Price * quantity).toFixed(2)}</h4>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </main>\n    );\n  }\n}\nexport default ProductShow;","import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Jumbotron, \n  Container\n} from 'reactstrap';\nimport {\n  Link\n} from \"react-router-dom\";\nimport './Header.css';\nimport logoText from '../ARG-logo-text.png';\n\nconst Header = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Jumbotron fluid>\n        <Container fluid>\n          <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', flexWrap: 'wrap'}}>\n            <img className=\"\" src={logoText} height=\"200\"/>\n          </div>\n        </Container>\n      </Jumbotron> \n      <Navbar dark expand=\"md\" id=\"navbar\">\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <Link className=\"nav-links\" to={`${process.env.PUBLIC_URL}/`}>Home</Link>\n            </NavItem>\n            <NavItem>\n              <Link className=\"nav-links\" to={`${process.env.PUBLIC_URL}/about`}>About</Link>\n            </NavItem>\n            <NavItem>\n              <Link className=\"nav-links\" to={`${process.env.PUBLIC_URL}/basket`}>Basket</Link>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default Header;","import React, { useState } from 'react';\nimport './Footer.css';\nimport logo from '../ARG-logo.png';\n\nconst Footer = (props) => {\n\n  return (\n    <footer style={{display: 'flex'}}>\n        <div>\n            <img src={logo} height=\"100\"/>\n        </div>\n    </footer>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Basket from './pages/Basket';\nimport ProductShow from './pages/ProductShow';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <main>\n      <Router>\n        <Header />\n        <Switch>\n          <Route path={process.env.PUBLIC_URL + '/basket'} component={Basket}/>\n          <Route path={process.env.PUBLIC_URL + '/product'} component={ProductShow}/>\n          <Route path={`${process.env.PUBLIC_URL}/about`} component={About}/>\n          <Route path={process.env.PUBLIC_URL + '/'} component={Home}/>\n          {/* <Route path=\"/\"><Redirect to=\"/alexandra-rose-gifts\" /></Route> */}\n        </Switch>      \n      </Router>\n      <Footer />\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './fonts/Autumn-in-November.ttf';\nimport './fonts/Bold-&-Stylish-Calligraphy.ttf';\nimport './fonts/Flower-Shop-TTF.ttf';\nimport './fonts/JandaSwirlyTwirly.ttf';\nimport './fonts/Lumberjack-Regular.ttf';\nimport './fonts/October-Twilight.ttf';\nimport './fonts/OhMyItsJuly-TTF.ttf';\nimport './fonts/Unicorn-Calligraphy-TTF.ttf';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}